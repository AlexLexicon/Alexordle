@page "/puzzle"
@inherits InjectedPage<PuzzlePageViewModel>
<PageTitle>Alexordle</PageTitle>

<div class="text-center mt-2 lg:mt-4">
    <p class="title text-4xl lg:text-6xl">Alexordle</p>
    <div class="mt-2 text-base lg:text-base text-gray-600">
        <p>Custom word games made by anyone.</p>
        <p>Click <a class="link" @onclick="ViewModel.NavigateToDesignerCommand.Bind()">here</a> to design your own puzzle!</p>
    </div>
</div>
@if (ViewModel.IsFaulted)
{
    <div class="grid min-h-full place-items-center px-6 py-24">
        <div class="text-center p-4 bg-slate-200 rounded-lg">
            <h1 class="mt-2 md:mt-4 text-4xl font-bold tracking-tight text-gray-900 md:text-5xl">Uh oh.</h1>
            <p class="mt-4 md:mt-6 text-base leading-7 text-gray-600">Sorry, we couldn’t load this puzzle.</p>
        </div>
    </div>
}
else
{
    <div class="mx-auto mt-4 max-w-xs lg:max-w-md">
        <div class="flex flex-col justify-center">
            <div class="grow">
                <PalleteView ViewModel="@ViewModel.PalleteViewModel" />
            </div>
        </div>
    </div>
    <div class="mx-auto max-w-lg">
        <MessageView ViewModel="@ViewModel.MessageViewModel" />
        @if (!ViewModel.IsComplete)
        {
            <div class="flex justify-center">
                <KeyboardView ViewModel="@ViewModel.KeyboardViewModel" />
            </div>
        }
        else
        {
            <div class="flex justify-center">
                <div>
                    <button type="button" @onclick="ViewModel.CopyShareCommand.Bind()" class="designer-button designer-secondary-button-enabled">
                        Share
                    </button>
                </div>
            </div>
            <div class="flex justify-center">
                <div class="mt-2 text-xl mx-auto text-center">
                    @ViewModel.Explanation
                </div>
            </div>
        }
    </div>
}

<FooterView />

@code
{
    [Parameter]
    [SupplyParameterFromQuery]
    public string? P { get; set; }

    protected override void OnParametersSet()
    {
        ViewModel.QueryString = P;

        base.OnParametersSet();
    }
}